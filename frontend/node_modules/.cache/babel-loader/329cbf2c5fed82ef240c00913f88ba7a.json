{"ast":null,"code":"var _jsxFileName = \"/Users/rorajvan/Desktop/demo/frontend/src/components/Register/Register.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom'; //Define a Login Component\n\nclass Register extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constrictor of Super class i.e The Component\n    super(props); //maintain the state required for this component\n    // this.props.history.push('/')\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.submitLogin = e => {\n      // var headers = new Headers();\n      //prevent page from refresh\n      e.preventDefault();\n      const data = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      console.log(data); //set the with credentials to true\n\n      axios.defaults.withCredentials = true; //make a post request with the user data\n\n      axios.post('http://localhost:5000/login', data).then(response => {\n        console.log(\"Status Code : \", response.status);\n\n        if (response.status === 200) {\n          this.setState({\n            authFlag: true\n          }); // }\n          // this.state.auth = true\n          // this.render()\n        } else {\n          this.setState({\n            authFlag: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      authFlag: false //Bind the handlers to this class\n\n    };\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n  } //username change handler to update state variable with the text entered by the user\n\n\n  render() {\n    //redirect based on successful login\n    let redirectVar = null;\n\n    if (cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/namespace\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    }\n\n    return (\n      /*   <div className='test'>\n             {redirectVar}   \n          <div className=\"container\">\n              \n              <div className=\"login-form\">\n                  <div className=\"main-div\">\n                      <div className=\"panel\">\n                          <h2>Admin Login</h2>\n                          <p>Please enter your username and password</p>\n                      </div>\n                      \n                          <div className=\"form-group\">\n                              <input onChange = {this.usernameChangeHandler} type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Username\"/>\n                          </div>\n                          <div className=\"form-group\">\n                              <input onChange = {this.passwordChangeHandler} type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\"/>\n                          </div>\n                          <button onClick = {this.submitLogin} className=\"btn btn-primary\">Login</button>                 \n                  </div>\n              </div>\n          </div>\n          </div>  */\n      React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, redirectVar, React.createElement(\"div\", {\n        className: \"contact-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Registration Form\"), React.createElement(\"form\", {\n        action: \"/register\",\n        method: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        onChange: this.usernameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        onChange: this.passwordChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        onChange: this.usernameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        placeholder: \"Enter name\",\n        onChange: this.usernameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        name: \"\",\n        value: \"Sign Up\",\n        onClick: this.submitLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), \" Remember Me \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Already have an account?\", React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"glyphicon glyphicon-log-in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), \"Sign in here\")))))\n    );\n  }\n\n} //export Login Component\n\n\nexport default Register;","map":{"version":3,"sources":["/Users/rorajvan/Desktop/demo/frontend/src/components/Register/Register.js"],"names":["React","Component","axios","cookie","Redirect","Link","Register","constructor","props","usernameChangeHandler","e","setState","username","target","value","passwordChangeHandler","password","submitLogin","preventDefault","data","state","console","log","defaults","withCredentials","post","then","response","status","authFlag","bind","componentWillMount","render","redirectVar","load"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport {Redirect} from 'react-router';\nimport {Link} from 'react-router-dom';\n\n\n//Define a Login Component\nclass Register extends Component{\n    //call the constructor method\n    constructor(props){\n        //Call the constrictor of Super class i.e The Component\n        super(props);\n        //maintain the state required for this component\n        // this.props.history.push('/')\n        this.state = {\n            username : \"\",\n            password : \"\",\n            authFlag : false\n        }\n        //Bind the handlers to this class\n        this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n        this.submitLogin = this.submitLogin.bind(this);\n    }    \n\n\n    //Call the Will Mount to set the auth Flag to false\n    componentWillMount(){\n        this.setState({\n            authFlag : false\n        })\n    }\n    //username change handler to update state variable with the text entered by the user\n    usernameChangeHandler = (e) => {\n        this.setState({\n            username : e.target.value\n        })\n    }\n    //password change handler to update state variable with the text entered by the user\n    passwordChangeHandler = (e) => {\n        this.setState({\n            password : e.target.value\n        })\n    }\n    //submit Login handler to send a request to the node backend\n    submitLogin = (e) => {\n        // var headers = new Headers();\n        //prevent page from refresh\n        e.preventDefault();\n        const data = {\n            username : this.state.username,\n            password : this.state.password\n        }\n        console.log(data);\n        //set the with credentials to true\n        axios.defaults.withCredentials = true;\n        //make a post request with the user data\n        axios.post('http://localhost:5000/login',data)\n            .then(response => {\n                console.log(\"Status Code : \",response.status);\n                if(response.status === 200){\n                    this.setState({\n                        authFlag : true\n                    })\n                // }\n                // this.state.auth = true\n                // this.render()\n                }\n                else{\n                    this.setState({\n                        authFlag : false\n                    })\n                }\n            });\n    }\n\n    render(){\n        //redirect based on successful login\n        let redirectVar = null;\n        if(cookie.load('cookie')){\n            redirectVar = <Redirect to= \"/namespace\"/>\n        }\n        return(\n        /*   <div className='test'>\n               {redirectVar}   \n            <div className=\"container\">\n                \n                <div className=\"login-form\">\n                    <div className=\"main-div\">\n                        <div className=\"panel\">\n                            <h2>Admin Login</h2>\n                            <p>Please enter your username and password</p>\n                        </div>\n                        \n                            <div className=\"form-group\">\n                                <input onChange = {this.usernameChangeHandler} type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Username\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input onChange = {this.passwordChangeHandler} type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\"/>\n                            </div>\n                            <button onClick = {this.submitLogin} className=\"btn btn-primary\">Login</button>                 \n                    </div>\n                </div>\n            </div>\n            </div>  */\n            <div className='body' >\n            {redirectVar}\n            <div className=\"contact-form\"  >\n\n        <h2>Registration Form</h2>\n        <form action=\"/register\" method=\"post\">\n            <p>First Name</p>\n            <input type=\"text\" name=\"first_name\"  onChange = {this.usernameChangeHandler}/>\n            <p>Last Name</p>\n            <input type=\"text\" name=\"last_name\" onChange = {this.passwordChangeHandler} />\n            <p>Email</p>\n            <input type=\"text\" name=\"email\" onChange = {this.usernameChangeHandler}/>\n            <p>Password</p>\n            <input type=\"text\" name=\"password\" placeholder=\"Enter name\" onChange = {this.usernameChangeHandler}/>\n            <input type=\"submit\" name=\"\" value=\"Sign Up\" onClick = {this.submitLogin} />\n            <p><input type=\"checkbox\" /> Remember Me </p>\n            <div>\n                Already have an account?<Link to=\"/login\"><span class=\"glyphicon glyphicon-log-in\"></span>Sign in here</Link>\n            </div>\n        </form>\n        </div>\n        </div>\n        )\n    }\n}\n//export Login Component\nexport default Register;"]},"metadata":{},"sourceType":"module"}